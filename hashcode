#include <iostream>
#include <string>
#include <sstream>
#include <fstream>
#include <vector>

using namespace std;

struct pos {int x; int y;};

class ride
{
public:
    pos startPos;
    pos finishPos;
    int earlStart;
    int lateFinish;
    // func.
};


int main(int argv, char* argc[])
{
    if (1)//(argv>1)
	{
		ifstream infile("C:\\Users\\OmarAli\\Desktop\\HashCode\\a_example.in");//(argc[1]);
		string sFile="", temp, str;
		stringstream ss, ssEachRide;
		int token, tokenArray[6], i=0, arrEachRide[6];
		getline(infile, str);
		ss << str;
		while(ss >> token)
        {
            tokenArray[i] = token;
            i++;
        }
        int R = tokenArray[0],
            C = tokenArray[1],
            F = tokenArray[2],
            N = tokenArray[3],
            B = tokenArray[4],
            T = tokenArray[5];
        //cout << tokenArray[0];
        //cout << R << C << F << N << B << T;
        vector <ride> rides;
        rides.reserve(N);
		while (getline(infile, temp))
		{
			//if (temp.find("\r") != -1) temp.replace(temp.find("\r"), 2, ""); //for linux
			//stringstream ss(temp);
			//cout <<  endl << temp ;
			stringstream ssEachRide;
			ssEachRide << temp;
			i = 0;
			while(ssEachRide >> token)
            {
                arrEachRide[i] = token;
                i++;
            }
            // fill the struct
            ride xRide;
            xRide.startPos.x = arrEachRide[0];
            xRide.startPos.y = arrEachRide[1];
            xRide.finishPos.x = arrEachRide[2];
            xRide.finishPos.y = arrEachRide[3];
            xRide.earlStart = arrEachRide[4];
            xRide.lateFinish = arrEachRide[5];
            rides.push_back(xRide);
            //for(int o=0 ; o<6 ; o++)
            //{
                cout << rides[0].startPos.x << " ";
            //}
            //cout << endl;
		}
		infile.close();
	}
    return 0;
}
